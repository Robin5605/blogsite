
name: "Docker Build and Push"

on:
  workflow_call:
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio.
      id-token: write

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c

      - name: "Install cosign"
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65
        with:
          cosign-release: "v1.13.1"

      - name: "Setup Docker buildx"
        uses: docker/setup-buildx-action@03a7a3d9fbee4f8ab73454ce02879cbaeb94fff8

      - name: "Log into registry ${{ env.REGISTRY }}"
        uses: docker/login-action@ec9cdf07d570632daeb912f5b2099cb9ec1d01e6
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Extract Docker metadata"
        id: meta
        uses: docker/metadata-action@3343011071fa59c64a174cc6aa415dc13b31b7b2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: "Build and push Docker image"
        id: build-and-push
        uses: docker/build-push-action@35434f557ad77672899d67f7992fb5560bda1071
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            git_sha=${{ github.sha }}
            aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: "Sign the published Docker image"
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
